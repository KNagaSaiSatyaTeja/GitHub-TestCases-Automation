name: Run Code Tests

on:
  push:
    paths:
      - "solutions/**"
  pull_request:
    paths:
      - "tests/**"

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y gcc g++ openjdk-17-jdk python3

      - name: Detect Changed Files
        id: changed-files
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD | grep 'solutions/' || echo "")
          echo "Detected changed files: $CHANGED_FILES"
          echo "CHANGED_FILES=$CHANGED_FILES" >> $GITHUB_ENV

      - name: Determine File Type
        id: determine-file
        run: |
          MAIN_FILE=$(echo "$CHANGED_FILES" | grep -E '\.(c|cpp|py|java)$' | head -n 1 || echo "")
          echo "Main file: $MAIN_FILE"
          if [[ -z "$MAIN_FILE" ]]; then exit 1; fi
          echo "MAIN_FILE=$MAIN_FILE" >> $GITHUB_ENV
          case "$MAIN_FILE" in
            *.c) echo "language=C" >> $GITHUB_ENV; echo "TEST_FILE=tests/test.c" >> $GITHUB_ENV;;
            *.cpp) echo "language=C++" >> $GITHUB_ENV; echo "TEST_FILE=tests/test.cpp" >> $GITHUB_ENV;;
            *.py) echo "language=Python" >> $GITHUB_ENV; echo "TEST_FILE=tests/test.py" >> $GITHUB_ENV;;
            *.java) echo "language=Java" >> $GITHUB_ENV; echo "TEST_FILE=tests/Test.java" >> $GITHUB_ENV;;
          esac

      - name: Compile and Run C++ Program
        if: env.language == 'C++'
        run: |
          g++ $MAIN_FILE -o solution_cpp
          ./solution_cpp < $TEST_FILE > test_output.log
          PASSED=$(grep -c "PASS" test_output.log || echo 0)
          TOTAL=$(wc -l < $TEST_FILE || echo 0)
          echo "✅ $PASSED out of $TOTAL test cases passed." | tee -a $GITHUB_STEP_SUMMARY

      - name: Compile and Run C Program
        if: env.language == 'C'
        run: |
          gcc $MAIN_FILE -o solution_c
          ./solution_c < $TEST_FILE > test_output.log
          PASSED=$(grep -c "PASS" test_output.log || echo 0)
          TOTAL=$(wc -l < $TEST_FILE || echo 0)
          echo "✅ $PASSED out of $TOTAL test cases passed." | tee -a $GITHUB_STEP_SUMMARY

      - name: Run Python Program
        if: env.language == 'Python'
        run: |
          python3 $MAIN_FILE < $TEST_FILE > test_output.log
          PASSED=$(grep -c "PASS" test_output.log || echo 0)
          TOTAL=$(wc -l < $TEST_FILE || echo 0)
          echo "✅ $PASSED out of $TOTAL test cases passed." | tee -a $GITHUB_STEP_SUMMARY

      - name: Compile and Run Java Program
        if: env.language == 'Java'
        run: |
          javac $MAIN_FILE
          java -cp solutions Solution < $TEST_FILE > test_output.log
          PASSED=$(grep -c "PASS" test_output.log || echo 0)
          TOTAL=$(wc -l < $TEST_FILE || echo 0)
          echo "✅ $PASSED out of $TOTAL test cases passed." | tee -a $GITHUB_STEP_SUMMARY
