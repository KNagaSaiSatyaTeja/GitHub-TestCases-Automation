name: Run Code Tests

on:
  push:
    paths:
      - "main/**"
  pull_request:
    paths:
      - "testcases/**"

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # Ensure previous commit is available

      - name: Detect Changed Files
        id: changed-files
        run: |
          BEFORE_COMMIT="${{ github.event.before }}"

          # Fallback in case BEFORE_COMMIT is empty (e.g., first push)
          if [ -z "$BEFORE_COMMIT" ] || ! git cat-file -e "$BEFORE_COMMIT"^{commit}; then
            BEFORE_COMMIT=$(git rev-parse HEAD~1)
          fi

          # Get changed files under "main/" directory
          CHANGED_FILES=$(git diff --name-only "$BEFORE_COMMIT" HEAD | grep '^main/' || true)

          echo "Changed Files:"
          echo "$CHANGED_FILES"

          # Pick the first modified file
          SELECTED_FILE=$(echo "$CHANGED_FILES" | head -n 1)

          if [[ -z "$SELECTED_FILE" ]]; then
            echo "No relevant file changes detected. Exiting..."
            exit 1
          fi

          echo "Detected file: $SELECTED_FILE"
          echo "SUBMITTED_FILE=$SELECTED_FILE" >> $GITHUB_ENV
          echo "SELECTED_FILE=$SELECTED_FILE" >> $GITHUB_ENV

      - name: Determine File Type
        id: determine-file
        run: |
          FILE="${{ env.SELECTED_FILE }}"

          case "$FILE" in
            *.c)   echo "language=C" >> $GITHUB_ENV ;;
            *.cpp) echo "language=C++" >> $GITHUB_ENV ;;
            *.py)  echo "language=Python" >> $GITHUB_ENV ;;
            *.java) echo "language=Java" >> $GITHUB_ENV ;;
            *)
              echo "Unsupported file type!"
              exit 1
              ;;
          esac

      - name: Install Dependencies
        run: |
          sudo apt update
          case "${{ env.language }}" in
            C)      sudo apt install -y gcc ;;
            C++)    sudo apt install -y g++ ;;
            Python) sudo apt install -y python3 ;;
            Java)   sudo apt install -y openjdk-17-jdk ;;
          esac

      - name: Compile and Run C Tests
        if: env.language == 'C'
        run: |
          gcc testcases/ctest.c -o test_runner
          ./test_runner | tee test_results.log

      - name: Compile and Run C++ Tests
        if: env.language == 'C++'
        run: |
          g++ testcases/cpptest.cpp -o test_runner_cpp
          ./test_runner_cpp | tee test_results.log

      - name: Run Python Tests
        if: env.language == 'Python'
        run: |
          python -m testcases.pythontest  | tee test_results.log

      - name: Compile and Run Java Tests
        if: env.language == 'Java'
        run: |
          javac testcases/*.java
          java -cp . testcases.MainTest | tee test_results.log
    

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test_results.log
